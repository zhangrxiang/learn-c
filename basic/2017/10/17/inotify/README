//
// Created by zhangrongxiang on 2017/10/17 16:26
// File inotify
//

/**
 * inotify_init
 * 是用于创建一个 inotify 实例的系统调用，并返回一个指向该实例的文件描述符。
 *
 * inotify_init1
 * 与 inotify_init 相似，并带有附加标志。如果这些附加标志没有指定，将采用与 inotify_init 相同的值。
 *
 * notify_add_watch
 * 增加对文件或者目录的监控，并指定需要监控哪些事件。
 * 标志用于控制是否将事件添加到已有的监控中，是否只有路径代表一个目录才进行监控，
 * 是否要追踪符号链接，是否进行一次性监控，当首次事件出现后就停止监控。
 *
 * inotify_rm_watch
 * 从监控列表中移出监控项目。
 *
 * read
 * 读取包含一个或者多个事件信息的缓存。
 *
 * close
 * 关闭文件描述符，并且
 *
 *
 * 可监控的事件
 * 有几种事件能够被监控。
 * 一些事件，比如 IN_DELETE_SELF 只适用于正在被监控的项目，
 * 而另一些，比如 IN_ATTRIB 或者 IN_OPEN 则只适用于监控过的项目，
 * 或者如果该项目是目录，则可以应用到其所包含的目录或文件。
 *
 * IN_ACCESS
 * 被监控项目或者被监控目录中的条目被访问过。例如，一个打开的文件被读取。
 * IN_MODIFY
 * 被监控项目或者被监控目录中的条目被修改过。例如，一个打开的文件被修改。
 * IN_ATTRIB
 * 被监控项目或者被监控目录中条目的元数据被修改过。例如，时间戳或者许可被修改。
 * IN_CLOSE_WRITE
 * 一个打开的，等待写入的文件或目录被关闭。
 * IN_CLOSE_NOWRITE
 * 一个以只读方式打开的文件或目录被关闭。
 * IN_CLOSE
 * 一个掩码，可以很便捷地对前面提到的两个关闭事件（IN_CLOSE_WRITE | IN_CLOSE_NOWRITE）进行逻辑操作。
 * IN_OPEN
 * 文件或目录被打开。
 * IN_MOVED_FROM
 * 被监控项目或者被监控目录中的条目被移出监控区域。该事件还包含一个 cookie 来实现 IN_MOVED_FROM 与 IN_MOVED_TO 的关联。
 * IN_MOVED_TO
 * 文件或目录被移入监控区域。该事件包含一个针对 IN_MOVED_FROM 的 cookie。如果文件或目录只是被重命名，将能看到这两个事件，如果它只是被移入或移出非监控区域，将只能看到一个事件。如果移动或重命名一个被监控项目，监控将继续进行。参见下面的 IN_MOVE-SELF。
 * IN_MOVE
 * 可以很便捷地对前面提到的两个移动事件（IN_MOVED_FROM | IN_MOVED_TO）进行逻辑操作的掩码。
 * IN_CREATE
 * 在被监控目录中创建了子目录或文件。
 * IN_DELETE
 * 被监控目录中有子目录或文件被删除。
 * IN_DELETE_SELF
 * 被监控项目本身被删除。监控终止，并且将收到一个 IN_IGNORED 事件。
 * IN_MOVE_SELF
 * 监控项目本身被移动。
 * 除了事件标志以外，还可以在 inotify 头文件（/usr/include/sys/inotify.h）中找到其他几个标志。
 * 例如，如果只想监控第一个事件，可以在增加监控时设置 IN_ONESHOT 标志。
 *
 *
 * */
